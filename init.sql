CREATE TABLE Roles (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
);

CREATE TABLE Users (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  username VARCHAR(32) NOT NULL,
  password VARCHAR(32) NOT NULL,
  firstname VARCHAR(45) NOT NULL,
  lastname VARCHAR(45) NOT NULL,
  email VARCHAR(255),
);

CREATE TABLE Projects (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL,
  desc VARCHAR(45),
  create_at DATETIME NOT NULL,
  edited_at DATETIME NOT NULL,
);

CREATE TABLE User_Role (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  Role_id INT NOT NULL,
  User_id INT NOT NULL,
  Project_id INT NOT NULL,
  FOREIGN KEY (Role_id) REFERENCES Roles(id)
      ON DELETE CASCADE,
  FOREIGN KEY (User_id) REFERENCES Users(id)
      ON DELETE CASCADE,
  FOREIGN KEY (Project_id) REFERENCES Projects(id)
      ON DELETE CASCADE
);

CREATE TABLE Permissions (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL
);

CREATE TABLE Role_Permission (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  Role_id INT NOT NULL,
  Permission_id INT NOT NULL,
  FOREIGN KEY (Role_id) REFERENCES Roles(id)
      ON DELETE CASCADE,
  FOREIGN KEY (Permission_id) REFERENCES Permissions(id)
      ON DELETE CASCADE,
);

CREATE TABLE Tasks (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL,
  desc VARCHAR(45) NULL,
  create_at DATETIME NOT NULL,
  edited_at DATETIME NOT NULL,
  status VARCHAR(45) NULL,
  Project_id INT NOT NULL,
  FOREIGN KEY (Project_id) REFERENCES Projects(id)
      ON DELETE CASCADE,
);

CREATE TABLE User_Project (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  Project_id INT NOT NULL,
  User_id INT NOT NULL,
  FOREIGN KEY (Project_id) REFERENCES Projects(id)
      ON DELETE CASCADE,
  FOREIGN KEY (User_id) REFERENCES Users(id)
      ON DELETE CASCADE,
);

CREATE TABLE User_Task (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  User_id INT NOT NULL,
  Task_id INT NOT NULL,
  FOREIGN KEY (Task_id) REFERENCES Tasks(id)
      ON DELETE CASCADE,
  FOREIGN KEY (User_id) REFERENCES Users(id)
      ON DELETE CASCADE,
);

CREATE TABLE Comment (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  text VARCHAR(300) NULL,
  create_at DATETIME NOT NULL,
  edited_at DATETIME NOT NULL,
  Comment_by INT NOT NULL,
  Task_id INT NOT NULL,
  FOREIGN KEY (Task_id) REFERENCES Tasks(id)
      ON DELETE CASCADE,
  FOREIGN KEY (Comment_by) REFERENCES Users(id)
      ON DELETE CASCADE,
);










